name: Deploy to Google Cloud Run

on:
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      SERVICE: ${{ secrets.GCP_RUN_SERVICE }}
      CLOUDSQL_INSTANCE: ${{ secrets.GCP_CLOUDSQL_INSTANCE }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      #- name: Build Docker image
      #  run: |
      #    docker build -t gcr.io/$PROJECT_ID/$SERVICE:${{ github.sha }} .
      #- name: Push Docker image
      #  run: |
      #    docker push gcr.io/$PROJECT_ID/$SERVICE:${{ github.sha }}
      #- name: Run Alembic migrations
      #  run: |
      #    pip install alembic psycopg2-binary
      #    export DATABASE_URL="postgresql+psycopg2://$DB_USER:$DB_PASS@/$DB_NAME?host=/cloudsql/$CLOUDSQL_INSTANCE"
      #    alembic upgrade head
      #- name: Deploy to Cloud Run
      #  run: |
      #    gcloud run deploy $SERVICE \
      #      --image gcr.io/$PROJECT_ID/$SERVICE:${{ github.sha }} \
      #      --region $REGION \
      #      --platform managed \
      #      --add-cloudsql-instances $CLOUDSQL_INSTANCE \
      #      --set-env-vars DATABASE_URL="postgresql+psycopg2://$DB_USER:$DB_PASS@/$DB_NAME?host=/cloudsql/$CLOUDSQL_INSTANCE",SECRET_KEY="$SECRET_KEY" \
      #      --allow-unauthenticated
